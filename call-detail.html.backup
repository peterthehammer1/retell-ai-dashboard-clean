<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Call Details - Retell AI Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px 40px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header h1 {
            font-size: 2rem;
            font-weight: 700;
        }
        
        .back-btn {
            background: rgba(255,255,255,0.2);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.3);
            transform: translateY(-2px);
        }
        
        .content {
            padding: 40px;
        }
        
        .call-header {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            border-left: 5px solid #667eea;
        }
        
        .call-id {
            font-size: 1.5rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 15px;
        }
        
        .call-status {
            display: inline-block;
            padding: 8px 20px;
            border-radius: 25px;
            font-size: 0.9rem;
            font-weight: bold;
            margin-right: 15px;
        }
        
        .status-ended { background: #e8f5e8; color: #2e7d32; }
        .status-started { background: #e3f2fd; color: #1976d2; }
        .status-failed { background: #ffebee; color: #c62828; }
        
        .call-meta {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .meta-item {
            background: white;
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #e9ecef;
        }
        
        .meta-label {
            font-weight: bold;
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }
        
        .meta-value {
            color: #333;
            font-size: 1rem;
        }
        
        .section {
            margin-bottom: 40px;
        }
        
        .section-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #e9ecef;
        }
        
        .field-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .field-item {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            border: 1px solid #e9ecef;
        }
        
        .field-label {
            font-weight: bold;
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .field-value {
            color: #333;
            font-size: 1rem;
            word-break: break-word;
        }
        
        .field-value.json {
            background: #f0f0f0;
            padding: 10px;
            border-radius: 5px;
            font-family: monospace;
            font-size: 0.9rem;
            white-space: pre-wrap;
        }
        
        .field-value.url {
            color: #1976d2;
            text-decoration: underline;
        }
        
        .field-value.url:hover {
            color: #1565c0;
        }
        
        .transcript-section {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 15px;
            border: 1px solid #e9ecef;
        }
        
        .transcript-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            font-family: monospace;
            font-size: 0.95rem;
            line-height: 1.6;
            white-space: pre-wrap;
            max-height: 400px;
            overflow-y: auto;
        }
        
        .loading {
            text-align: center;
            color: #666;
            font-style: italic;
            padding: 40px;
            font-size: 1.1rem;
        }
        
        .error {
            color: #d32f2f;
            background: #ffebee;
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            border-left: 4px solid #d32f2f;
        }
        
        .empty-value {
            color: #999;
            font-style: italic;
        }
        
        .timestamp {
            color: #666;
            font-size: 0.9rem;
        }
        
        .duration {
            color: #2e7d32;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìû Call Details</h1>
            <a href="index.html" class="back-btn">‚Üê Back to Dashboard</a>
        </div>
        
        <div class="content">
            <div id="loading" class="loading">Loading call details...</div>
            <div id="error" class="error" style="display: none;"></div>
            <div id="call-details" style="display: none;">
                <!-- Call details will be populated here -->
            </div>
        </div>
    </div>

    <script>
        // Get call ID from URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const callId = urlParams.get('id');
        
        if (!callId) {
            document.getElementById('loading').style.display = 'none';
            document.getElementById('error').style.display = 'block';
            document.getElementById('error').innerHTML = 'No call ID provided. Please go back to the dashboard and click on a call.';
        } else {
            // Load call details if call ID is provided
        }
        }

        async function loadCallDetails() {
            try {
                const response = await fetch(`/.netlify/functions/api-calls`);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const calls = await response.json();
                const call = calls.find(c => c.call_id === callId);
                
                if (!call) {
                    throw new Error('Call not found');
                }
                
                displayCallDetails(call);
                
            } catch (error) {
                console.error('Error loading call details:', error);
                document.getElementById('loading').style.display = 'none';
                document.getElementById('error').style.display = 'block';
                document.getElementById('error').innerHTML = 'Error loading call details: ' + error.message;
            }
        }

        function displayCallDetails(call) {
            document.getElementById('loading').style.display = 'none';
            document.getElementById('call-details').style.display = 'block';
            
            const statusClass = call.call_status === 'ended' ? 'status-ended' : 
                              call.call_status === 'failed' ? 'status-failed' : 'status-started';
            
            const duration = call.duration_ms ? Math.round(call.duration_ms / 1000) : 0;
            const durationText = duration > 0 ? `${duration}s` : 'N/A';
            
            const startTime = call.start_timestamp ? new Date(parseInt(call.start_timestamp)).toLocaleString() : 'N/A';
            const endTime = call.end_timestamp ? new Date(parseInt(call.end_timestamp)).toLocaleString() : 'N/A';
            
            document.getElementById('call-details').innerHTML = `
                <div class="call-header">
                    <div class="call-id">${call.call_id}</div>
                    <div>
                        <span class="call-status ${statusClass}">${call.call_status}</span>
                        <span class="duration">Duration: ${durationText}</span>
                    </div>
                    <div class="call-meta">
                        <div class="meta-item">
                            <div class="meta-label">From</div>
                            <div class="meta-value">${call.from_number || 'N/A'}</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">To</div>
                            <div class="meta-value">${call.to_number || 'N/A'}</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Agent ID</div>
                            <div class="meta-value">${call.agent_id || 'N/A'}</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Call Type</div>
                            <div class="meta-value">${call.call_type || 'N/A'}</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Direction</div>
                            <div class="meta-value">${call.direction || 'N/A'}</div>
                        </div>
                        <div class="meta-item">
                            <div class="meta-label">Created</div>
                            <div class="meta-value timestamp">${new Date(call.created_at).toLocaleString()}</div>
                        </div>
                    </div>
                </div>

                ${call.transcript ? `
                <div class="section">
                    <div class="section-title">üìù Transcript</div>
                    <div class="transcript-section">
                        <div class="transcript-content">${call.transcript}</div>
                    </div>
                </div>
                ` : ''}

                ${call.call_analysis ? `
                <div class="section">
                    <div class="section-title">üîç Call Analysis</div>
                    <div class="field-grid">
                        ${Object.entries(JSON.parse(call.call_analysis)).map(([key, value]) => `
                            <div class="field-item">
                                <div class="field-label">${key.replace(/_/g, ' ').toUpperCase()}</div>
                                <div class="field-value ${typeof value === 'object' ? 'json' : ''}">${typeof value === 'object' ? JSON.stringify(value, null, 2) : (value || 'N/A')}</div>
                            </div>
                        `).join('')}
                    </div>
                </div>
                ` : ''}

                <div class="section">
                    <div class="section-title">üìä All Call Data (${Object.keys(call).length} fields)</div>
                    <div class="field-grid">
                        ${Object.entries(call)
                            .filter(([key, value]) => !['transcript', 'call_analysis', 'call_id', 'call_status', 'from_number', 'to_number', 'agent_id', 'call_type', 'direction', 'created_at', 'duration_ms', 'start_timestamp', 'end_timestamp'].includes(key))
                            .map(([key, value]) => `
                                <div class="field-item">
                                    <div class="field-label">${key.replace(/_/g, ' ').toUpperCase()}</div>
                                    <div class="field-value ${typeof value === 'object' ? 'json' : ''} ${key.includes('url') ? 'url' : ''}">
                                        ${value ? (typeof value === 'object' ? JSON.stringify(value, null, 2) : value) : '<span class="empty-value">N/A</span>'}
                                    </div>
                                </div>
                            `).join('')}
                    </div>
                </div>
            `;
        }

    </script>
</body>
</html>
